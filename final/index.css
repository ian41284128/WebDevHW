@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@900&family=Public+Sans:wght@100;700&family=Staatliches&display=swap');

:root {
    --fov: 580px;
    --scale: 2;

    --ww: 177vh;
    --vw-ww: calc((100vw - var(--ww)) / 2);
    --halfw: calc(var(--ww)/2);
    --nhalfw: calc(-1 * (var(--halfw)));

    --wh: calc(var(--ww) * 0.56);
    --vh-wh: calc((100vh - var(--wh)) / 2);
}

*{
    box-sizing: border-box;
}
html, body{
    margin: 0;
    overflow: hidden;
}
img{
    width: 100%;
    height: auto;
}

a{
    text-decoration: none;
    color: black;
}

/* WINDOW CONTENT */

.title{
    position: absolute; 
    left: 0; 
    right: 0;
    top: 30%;
    width: 100%;
    text-align: center;
    z-index: -1;

    font-size: 5vh;
    font-family: 'Public Sans', sans-serif;
}
.my-name{
    font-size: 7vh;
    font-weight: bold;
}
.chn-name{
    font-family: 'Noto Sans SC', sans-serif;
    font-size: 7vh;
}

.name-hover:hover{
    color: red;
}

.title > .cube > .cube__face--back {
    transform: scale(-1, 1) rotateY(180deg) translateZ(var(--halfw)) translateZ(100px) translateY(-5vh);
}


/* BEDSIDE CONTENT */

.poster{
    position: absolute;
    font-family: 'Staatliches', cursive;
    background-color: white;
    font-size: 200%;
    padding-right: 10%;
    box-shadow: 5px 1px 10px;
    transition: transform 0.3s ease-in-out;
}

.poster:hover{
    background-color: yellow;
    transform: scale(1.1);
}

.left-wall > .cube > .cube__face--left {
    transform: scale(-1, 1) rotateY(-90deg) translateZ(var(--halfw)) translateZ(165px);
}

/* DOORWAY CONTENT */

.mirror{
    position: absolute;
    background-color: black;
    width: 17.5%;
    bottom: 0;
    right: 36%;
    height: auto;
}

/* WEBGL LOGIC */

#WebGL{
    position: absolute;
    z-index: 0;
    pointer-events: none;
}
.controller > .cube > .cube__face.frontface{
    pointer-events: none;
}
.controller{
    pointer-events: none;
}
.controller > .cube > .cube__face{
    pointer-events: all;
}

.scene {
    position: absolute;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    perspective: var(--fov);
}

.cube {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transform: scale3d(var(--scale),var(--scale),var(--scale)) rotateY(0) translate3d(var(--vw-ww), var(--vh-wh), 0);
    transition: all 1s linear;
    z-index: -1;
}

.cube__face {
    position: absolute;
    width: var(--ww);
    height: var(--wh);
    /* border: 2px solid black; */
    color: black;
    text-align: center;
}

.cube__face.backface{
    display: none;
}

.cube__face--front  { background: hsla(  0, 100%, 50%, 0); }
.cube__face--right  { background: hsla( 60, 100%, 50%, 0); }
.cube__face--back   { background: hsla(120, 100%, 50%, 0); }
.cube__face--left   { background: hsla(180, 100%, 50%, 0); }

.cube__face--front  {
    transform: scale(-1, 1) rotateY(0deg) translateZ(var(--halfw)); 
}
.cube__face--right  { transform: scale(-1, 1) rotateY( 90deg) translateZ(var(--halfw)); }
.cube__face--back   { transform: scale(-1, 1) rotateY(180deg) translateZ(var(--halfw)); }
.cube__face--left   { transform: scale(-1, 1) rotateY(-90deg) translateZ(var(--halfw)); }

.cube.rotate0 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(0deg) translateX(var(--vw-ww)) translateY(var(--vh-wh));
}
.cube.rotate360 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(360deg) translateX(var(--vw-ww)) translateY(var(--vh-wh));
}
.cube.rotate90 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(90deg) translateX(var(--vw-ww)) translateY(var(--vh-wh));
}
.cube.rotate-270 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(-270deg) translateX(var(--vw-ww)) translateY(var(--vh-wh));
}
.cube.rotate180 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(180deg) translateX(var(--vw-ww)) translateY(var(--vh-wh));
}
.cube.rotate-180 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(-180deg) translate3d(var(--vw-ww), var(--vh-wh), 0);
}
.cube.rotate-90 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(-90deg) translate3d(var(--vw-ww), var(--vh-wh), 0);
}
.cube.rotate270 {
    transform:  scale3d(var(--scale),var(--scale),var(--scale)) rotateY(270deg) translate3d(var(--vw-ww), var(--vh-wh), 0);
}

.cube.is-backface-hidden .cube__face {
    backface-visibility: hidden;
}